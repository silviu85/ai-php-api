# --- Application Environment ---
APP_ENV=testing
APP_DEBUG=true

APP_NAME=Laravel
APP_ENV=local
APP_KEY=base64:cGFYa3il/lBtdERMP1A4AZMw2wkwQLThfALfVeulSbM=
APP_DEBUG=true
APP_URL=http://localhost:8000

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

# --- Database Connection for Testing ---
DB_CONNECTION=mysql
DB_HOST=db-tester # Must match the database service name in docker-compose.test.yml
DB_PORT=3306
DB_DATABASE=ai_chat_testing # Use a separate database name
DB_USERNAME=tester
DB_PASSWORD=testpassword
DB_ROOT_PASSWORD=testrootpassword

SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=database
# CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

VITE_APP_NAME="${APP_NAME}"

OPENAI_API_KEY="dummy_keydummy_keydummy_keydummy_key"
GEMINI_API_KEY="dummy_keydummy_keydummy_keydummy_key"
CLAUDE_API_KEY="dummy_keydummy_keydummy_keydummy_key"

# This key will determine which service is active by default
ACTIVE_AI_SERVICE=gemini

FRONTEND_API_KEY=base64:/4YlBoXvNeAc+iCoBvX23FpOCvoCiCSvjShsM89XwQ0=

# Add the domains of your frontend application(s) here.
# For development, you'll use localhost. For production, your actual domain.
CORS_ALLOWED_ORIGINS=https://localhost:8080
